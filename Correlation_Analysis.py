"""

Automatically generated by Colaboratory.

"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns # matplotlib 기반의 시각화 라이브러리, 유익한 통계 그래픽을 그리기 위한 고급 인터페이스를 제공

colab_path = '/content/drive/'
file_path = colab_path + 'MyDrive/ColabNotebooks/train.csv'

df_titanic = pd.read_csv(file_path, sep=',')
df_titanic

titanic = sns.load_dataset('titanic')
titanic.head()

titanic['who'].unique() # 각 열의 유일한 값 찾고 싶을 때 사용하는 함수

titanic.shape

titanic.info()

titanic.isnull().sum() # 결측치 총계
# 최빈값
# 가장 많이 관측되는 수, 즉 주어진 값 중에서 가장 자주 나오는 값

titanic['age'] = titanic['age'].fillna(titanic['age'].median()) # 중앙값
# NaN을 특정 값으로 대체하는 기능

titanic.isnull().sum()

titanic.drop('embark_town', axis=1, inplace=True)
# embarked : 배를 탄 곳
# 열 embarked와 똑같기 때문에 drop()

titanic['embarked'].value_counts() # 개별적인 값의 빈도

titanic['embarked'] = titanic['embarked'].fillna('S')

titanic['embarked'].isna().sum()
# 데이터프레임 내에 결측 값을 확인
# isnull()과 동일

# deck, 배의 구역
titanic['deck'].value_counts()

titanic['deck'] = titanic['deck'].fillna('C')
titanic['deck'].isnull().sum()

titanic.info()

titanic.describe() # 기술통계

titanic['sex'].unique()

titanic['sex'].value_counts()

titanic.groupby('who')['survived'].value_counts()

titanic.groupby('who')['survived'].mean() # 시리즈
titanic.groupby('who')['survived', 'age'].mean() # 데이터 프레임

plt.pie(titanic['survived'].value_counts(), explode=[0,0.1], autopct='%1.2f%%')
#titanic['survived'].value_counts().plot.pie(explode=[0,0.1], autopct='%1.2f%%')
plt.title('survived')
plt.ylabel('')

sns.countplot('survived', data=titanic) # ★ Bar Chart
plt.title('survived')

f,ax=plt.subplots(1,2,figsize=(12,6))

ax[0].pie(titanic['survived'].value_counts(), explode=[0,0.1], autopct='%1.2f%%' # ★
ax[0].set_title('survived')
ax[0].set_ylabel('')

sns.countplot('survived', data=titanic, ax=ax[1])
ax[1].set_title('survived')

titanic['age'].hist(bins=20,figsize=(18,8),grid=False);
plt.title('age')

titanic.groupby('pclass')['survived'].value_counts()

sns.countplot('pclass', hue = 'survived', data=titanic)
plt.title('pclass vs survived')

titanic.groupby('sex')['survived'].value_counts()

sns.countplot('sex', hue = 'survived', data=titanic)
plt.title('Sex vs. Survived')

plt.figure(figsize=(40,6))
sns.countplot('age', hue = 'survived', data=titanic)
plt.title('age vs. survived')

titanic.corr()

titanic['sex']

titanic['sex']=titanic['sex'].replace('female', 0)
titanic['sex']=titanic['sex'].replace('male', 1)

titanic['who']=titanic['who'].replace('woman', 0)
titanic['who']=titanic['who'].replace('man', 1)
titanic['who']=titanic['who'].replace('child', 2)
titanic['who']

titanic['embarked'].unique()

titanic['embarked']=titanic['embarked'].replace('C', 0)
titanic['embarked']=titanic['embarked'].replace('S', 1)
titanic['embarked']=titanic['embarked'].replace('Q', 2)
titanic['embarked']

plt.figure(figsize=(10, 10))
sns.heatmap(titanic.corr(), linewidths=0.01, square=True, annot=True, cmap=plt.cm.viridis, linecolor="white")
plt.title('Correlation between features')